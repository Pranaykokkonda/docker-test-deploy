#name: CI/CD Pipeline

#on:
#  push:
#    branches:
#      - main
#  pull_request:
#    branches:
#      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Check out the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Set up Docker Hub credentials
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Build and push the Docker image
      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/docker-node-app:latest

      # Run tests (optional)
      - name: Run tests
        run: npm test

  deploy:
    runs-on: ubuntu-latest

    needs: build  # Only run deploy job after the build job is successful

    steps:
      # Checkout code (again, in case it's needed in the deploy step)
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up SSH key
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.SERVER_KEY }}

      # SSH into the server, start Minikube, and deploy the app
      - name: Deploy to Remote Server
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER1_IP }} << 'EOF'
          sudo usermod -aG docker $USER
          newgrp docker || true
          #sudo docker pull ${{ secrets.DOCKER_USERNAME }}/docker-node-app
          
          if ! minikube status | grep -q "Running"; then
            minikube start --driver=docker || (minikube delete && minikube start --driver=docker)
          fi

          # Ensure kubectl is configured correctly
          #export KUBEVERSION=$(kubectl version --client -o json | jq -r '.clientVersion.gitVersion')
          #if [[ -z "$KUBEVERSION" ]]; then
            #curl -LO "https://storage.googleapis.com/kubernetes-release/release/v1.21.0/bin/linux/amd64/kubectl"
            #chmod +x kubectl
            #sudo mv kubectl /usr/local/bin/
          #fi

            # Configure kubectl to use Minikube
          #kubectl config use-context minikube || {
            #echo "Minikube context not found. Starting Minikube cluster..."; 
            #minikube start --driver=docker;
          #}

            echo "Checking minikube status..."
            minikube status
          
            # Pull the Docker image from Docker Hub
            #sudo docker pull ${{ secrets.DOCKER_USERNAME }}/docker-node-app

            echo "Current Location....."
            pwd
            ls -ltrh
            
            #echo "Cloning the repo....."
            git clone -b main https://github.com/Pranaykokkonda/docker-test-deploy.git
            cd docker-test-deploy/
            ls -ltrh
            

            # Deploy the app using kubectl (ensure your deployment.yaml is already on the server or part of the repo)
            echo "Deploying application and checking pods....."
            kubectl apply -f deployment.yaml
            kubectl get pods

            echo "Exposing the application....."
            kubectl apply -f service.yaml
            kubectl get services

            echo "Checking the running docker containers and minikube ip....."            
            docker ps
            minikube ip

            echo "Browsing the application after successfull deployment....."
            curl http://192.168.49.2:32000/

            # Expose the service (optional, if needed)
            #kubectl expose deployment docker-node-app --type=NodePort --port=3000

            # Get the Minikube service URL (optional, to confirm deployment)
            #minikube service docker-node-app --url
            #kubectl logs docker-node-app-86497bd9fd-f8xf9
          EOF
